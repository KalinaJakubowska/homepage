{"version":3,"sources":["common/tiles/tileStyles.js","common/tiles/BigTile/styled.js","common/tiles/BigTile/index.js","GlobalStyle.js","common/personalInfo.js","App.js","reportWebVitals.js","index.js"],"names":["TileWrapper","styled","div","BigTileWrapper","Title","h2","List","ul","ListItem","li","BigTile","title","icon","list","map","item","GlobalStyle","createGlobalStyle","skillset","plans","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yXAEO,IAAMA,EAAcC,IAAOC,IAAV,K,utBCCjB,IAAMC,EAAiBF,YAAOD,EAAPC,CAAH,KAKdG,EAAQH,IAAOI,GAAV,KASLC,EAAOL,IAAOM,GAAV,KAQJC,EAAWP,IAAOQ,GAAV,KCNNC,EAhBC,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,KAC9B,OACE,eAACV,EAAD,WACE,eAACC,EAAD,WACGO,EACAC,KAEH,cAACN,EAAD,UACGO,EAAKC,KAAI,SAACC,GAAD,OACR,cAACP,EAAD,UAAsBO,GAAPA,Y,ibCVlB,IAAMC,EAAcC,YAAH,KCFXC,EAAW,CACtBP,MAAO,uBACPC,KAAM,qBACNC,KAAM,CACJ,kBACA,QACA,aACA,kBACA,cACA,eACA,6BACA,wBACA,qBACA,WACA,cACA,2BACA,WACA,WACA,eACA,iBACA,wBACA,gCACA,SACA,QACA,MACA,QAISM,EAAQ,CACnBR,MAAO,4BACPC,KAAM,eACNC,KAAM,CACJ,aACA,YACA,UACA,eACA,gBACA,aACA,UACA,iBCzBWO,MAVf,WACE,OACE,qCACE,cAACJ,EAAD,IACA,cAAC,EAAD,CAASL,MAAOO,EAASP,MAAOC,KAAMM,EAASN,KAAMC,KAAMK,EAASL,OACpE,cAAC,EAAD,CAASF,MAAOQ,EAAMR,MAAOC,KAAMO,EAAMP,KAAMC,KAAMM,EAAMN,WCElDQ,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.f5654abb.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const TileWrapper = styled.div`\r\n  background: #ffffff;\r\n  box-shadow: 0px -2px 50px rgba(9, 10, 51, 0.02),\r\n    0px 16px 58px rgba(9, 10, 51, 0.03);\r\n  border-radius: 4px;\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { TileWrapper } from \"../tileStyles\";\r\n\r\nexport const BigTileWrapper = styled(TileWrapper)`\r\n  padding: 32px;\r\n  margin: 72px auto;\r\n`;\r\n\r\nexport const Title = styled.h2`\r\n  font-weight: 900;\r\n  font-size: 30px;\r\n  line-height: 1.2;\r\n  margin: 0px;\r\n  padding-bottom: 15px;\r\n  border-bottom: 1px solid rgba(209, 213, 218, 0.3);\r\n`;\r\n\r\nexport const List = styled.ul`\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, 313px);\r\n  justify-content: space-between;\r\n  margin: 32px 0 0 0;\r\n  grid-gap: 8px;\r\n`;\r\n\r\nexport const ListItem = styled.li`\r\n  font-size: 18px;\r\n  line-height: 1.4;\r\n  color: #6e7e91;\r\n  &::marker {\r\n      color: blue;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { BigTileWrapper, Title, List, ListItem } from \"./styled\";\r\n\r\nconst BigTile = ({ title, icon, list }) => {\r\n  return (\r\n    <BigTileWrapper>\r\n      <Title>\r\n        {title}\r\n        {icon}\r\n      </Title>\r\n      <List>\r\n        {list.map((item) => (\r\n          <ListItem key={item}>{item}</ListItem>\r\n        ))}\r\n      </List>\r\n    </BigTileWrapper>\r\n  );\r\n};\r\n\r\nexport default BigTile;\r\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n   html {\r\n      box-sizing: border-box;\r\n      overflow-y: scroll;\r\n   }\r\n\r\n   *,\r\n   ::before,\r\n   ::after {\r\n      box-sizing: inherit;\r\n   }\r\n\r\n   body {\r\n      font-family: 'Inter', sans-serif;\r\n      letter-spacing: 0.05em;\r\n      background: #FBFBFE;\r\n      min-height: 100vh;\r\n      max-width: 1244px;\r\n      padding: 14px;\r\n      margin: 0 auto;\r\n   }\r\n`;\r\n","export const skillset = {\r\n  title: \"My skillset includes\",\r\n  icon: \"üõ†Ô∏è\",\r\n  list: [\r\n    \"JavaScript ES6+\",\r\n    \"React\",\r\n    \"Redux-Saga\",\r\n    \"Redux (Toolkit)\",\r\n    \"React Hooks\",\r\n    \"React Router\",\r\n    \"Semantic & accessible HTML\",\r\n    \"Responsive Web Design\",\r\n    \"CSS BEM convention\",\r\n    \"CSS Grid\",\r\n    \"CSS Flexbox\",\r\n    \"Working with API (axios)\",\r\n    \"Teamwork\",\r\n    \"Markdown\",\r\n    \"Immutability\",\r\n    \"Error handling\",\r\n    \"Promises, Async/Await\",\r\n    \"GitHub Pull Requests & Review\",\r\n    \"Trello\",\r\n    \"Scrum\",\r\n    \"NPM\",\r\n    \"Git\",\r\n  ],\r\n};\r\n\r\nexport const plans = {\r\n  title: \"What I want to learn next\",\r\n  icon: \"üöÄ\",\r\n  list: [\r\n    \"Typescript\",\r\n    \"Gatsby.js\",\r\n    \"Node.js\",\r\n    \"Unit testing\",\r\n    \"React Context\",\r\n    \"JS classes\",\r\n    \"Cypress\",\r\n    \"React Native\",\r\n  ],\r\n};\r\n","import BigTile from \"./common/tiles/BigTile\";\nimport { GlobalStyle } from \"./GlobalStyle\";\nimport { skillset } from \"./common/personalInfo\";\nimport { plans } from \"./common/personalInfo\";\n\nfunction App() {\n  return (\n    <>\n      <GlobalStyle />\n      <BigTile title={skillset.title} icon={skillset.icon} list={skillset.list} />\n      <BigTile title={plans.title} icon={plans.icon} list={plans.list} />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}